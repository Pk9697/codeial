class ChatEngine{constructor(e,s){this.chatBox=$("#"+e),this.userEmail=s,this.socket=io.connect("http://localhost:4000"),//! i emit a connect event //1
this.userEmail&&this.connectionHandler()}connectionHandler(){//! acknowledgement is emitted back from chat sockets that you are connected with connect event
let e=this;this.socket.on("connect",(function(){console.log("connection established using sockets"),e.socket.emit("join_room",{user_email:e.userEmail,chatroom:"codeial"}),e.socket.on("user_joined",(function(e){console.log("a user joined:",e)}))}));let s=$("#chat-message-input-container");s.submit((function(t){t.preventDefault(),""!=$("#chat-message-input").val()&&$.ajax({type:"post",url:"/chats/create",data:s.serialize(),success:function(s){e.socket.emit("send_message",{message:s.data.chat.content,user_email:e.userEmail,chatroom:"codeial"}),$("#chat-message-input").val("")},error:function(e){console.log(e.responseText)}})})),e.socket.on("receive_message",(function(s){console.log("message received",s.message);let t=$("<li>"),o="other-message";s.user_email==e.userEmail&&(o="self-message"),t.append($("<span>",{html:s.message})),t.append($("<sub>",{html:s.user_email})),t.addClass(o),$("#chat-messages-list").append(t)}))}}